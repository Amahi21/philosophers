

					(_____1_____)
					   Overview

 •	Один или несколько философов сидят за круглым столом.
	В центре стола стоит большая тарелка со спагетти.

 •	Философы попеременно едят, думают или спят.
	Пока они едят, они не думают и не спят;
	думая, они не едят и не спят;
	и, конечно, во сне они не едят и не думают.

 •	Также на столе лежат вилки. Вилок столько же, сколько философов.

 •	Поскольку подавать и есть спагетти только одной вилкой очень неудобно,
	Философ берет и правую, и левую вилки для еды, по одной в каждую руку.

 •	Когда философ заканчивает есть, он кладет вилки обратно на стол и
	начинает спать. Проснувшись, они снова начинают думать. 
	Симуляция останавливается, когда философ умирает от голода.

 •	Каждый философ должен есть и никогда не должен голодать.

 •	Философы не разговаривают друг с другом.

 • 	Философы не знают, что другой философ вот-вот умрет.

 • 	Нет необходимости говорить, что философы должны избегать смерти.


					(_____2_____)
					Global rules

 •	Глобальные переменные запрещены

 •	Ваша программа должна принимать следующие аргументы:
		[number_of_philosophers] [time_to_die] [time_to_eat] [time_to_sleep] [number_of_times_each_philosopher_must_eat]

		◦ number_of_philosophers			- Число философов, а также число вилок.

		◦ time_to_die (в миллисекундах)		- Интервал между принятием пищи (с последего приема пищи или начала симуляции).
											  Если философ не начал есть по окончании этого интервала, он умирает.

		◦ time_to_eat (в миллисекундах)		- Время, котрое философы тратят на прием пищи
											  Все это время им нужно держать 2 вилки.

		◦ time_to_sleep (в миллисекундах)	- Время, которое философы тратят на сон.


		◦ number_of_times_each_philosopher_must_eat (необязательный аргумент) - Если все философы поели это кол-во раз, симуляция останавливается.
																				Если хотя бы 1 философ умер,			симуляция останавливатеся.

 •	У каждого философа есть номер, от 1 до "number_of_philosophers"

 •	Философ под номером 1 сидит рядом с философом "number_of_philosophers"
	Любой другой философ с номером N сидит между философом с номером N - 1 и философом с номером N + 1


					About the logs
 •	Любое изменение состояния философа должно быть отформатировано следующим образом:

	◦ timestamp_in_ms X взял вилку.
	◦ timestamp_in_ms X ест.
	◦ timestamp_in_ms X спит.
	◦ timestamp_in_ms X думает.
	◦ timestamp_in_ms X умер.

	timestamp_in_ms - текущая метка времени
	Х				- номер философа

 •	Отображаемое сообщение о состоянии не следует путать с другим сообщением.

 •	Сообщение о смерти философа должно отображаться не позднее 10ms после фактической смерти философа.

 •	Философы должны избегать смерти.

 !!!•	Your program must not have any data races.
